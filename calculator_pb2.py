# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: calculator.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='calculator.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10\x63\x61lculator.proto\")\n\x05List1\x12\x0f\n\x07number1\x18\x01 \x01(\x05\x12\x0f\n\x07number2\x18\x02 \x01(\x05\"\x14\n\x03Num\x12\r\n\x05value\x18\x01 \x01(\x05\x32#\n\nCalculator\x12\x15\n\x03Sum\x12\x06.List1\x1a\x04.Num\"\x00\x62\x06proto3'
)




_LIST1 = _descriptor.Descriptor(
  name='List1',
  full_name='List1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='number1', full_name='List1.number1', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='number2', full_name='List1.number2', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=61,
)


_NUM = _descriptor.Descriptor(
  name='Num',
  full_name='Num',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='Num.value', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=83,
)

DESCRIPTOR.message_types_by_name['List1'] = _LIST1
DESCRIPTOR.message_types_by_name['Num'] = _NUM
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

List1 = _reflection.GeneratedProtocolMessageType('List1', (_message.Message,), {
  'DESCRIPTOR' : _LIST1,
  '__module__' : 'calculator_pb2'
  # @@protoc_insertion_point(class_scope:List1)
  })
_sym_db.RegisterMessage(List1)

Num = _reflection.GeneratedProtocolMessageType('Num', (_message.Message,), {
  'DESCRIPTOR' : _NUM,
  '__module__' : 'calculator_pb2'
  # @@protoc_insertion_point(class_scope:Num)
  })
_sym_db.RegisterMessage(Num)



_CALCULATOR = _descriptor.ServiceDescriptor(
  name='Calculator',
  full_name='Calculator',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=85,
  serialized_end=120,
  methods=[
  _descriptor.MethodDescriptor(
    name='Sum',
    full_name='Calculator.Sum',
    index=0,
    containing_service=None,
    input_type=_LIST1,
    output_type=_NUM,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_CALCULATOR)

DESCRIPTOR.services_by_name['Calculator'] = _CALCULATOR

# @@protoc_insertion_point(module_scope)
